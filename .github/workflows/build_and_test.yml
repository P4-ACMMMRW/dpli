name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        cpp_compiler: [g++, clang++, cl]
        include:
          - os: windows-latest
            cpp_compiler: cl
          - os: ubuntu-latest
            cpp_compiler: g++
          - os: ubuntu-latest
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            cpp_compiler: g++
          - os: windows-latest
            cpp_compiler: clang++
          - os: ubuntu-latest
            cpp_compiler: cl

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set Build Output Directory
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Setup JDK
      if: matrix.os == 'windows-latest'
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }} --output-on-failure

    - name: Upload Linux
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: dpli
        path: build/dpli
        if-no-files-found: error

    - name: Upload Windows
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: dpli
        path: build/dpli.exe
        if-no-files-found: error
