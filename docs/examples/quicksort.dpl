// Example quicksort implementation in DPL
quicksort(list A, int lo, int hi):
    if lo >= 0 and lo < hi:
        list p = partition(A, lo, hi)
        quicksort(A, lo, p[0] - 1)
        quicksort(A, p[1] + 1, hi)

partition(list A, int lo, int hi) -> list:
    int pivot = A[(lo + hi) / 2]

    int lt = lo
    int eq = lo
    int gt = hi

    loop eq <= gt:
        if A[eq] < pivot:
            swap(A, eq, lt)
            lt = lt + 1
            eq = eq + 1
        else:
            if A[eq] > pivot:
                swap(A, eq, gt)
                gt = gt - 1
            else:
                eq = eq + 1
    
    return [lt, gt]

swap(list A, int i, int j):
    int temp = A[i]
    A[i] = A[j]
    A[j] = temp

list A = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]
quicksort(A, 0, len(A) - 1)

print("Sorted list: " + A)
