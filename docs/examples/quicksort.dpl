# Example quicksort implementation in DPL
def quicksort(A, lo, hi):
    if lo >= 0 and lo < hi:
        p = partition(A, lo, hi)
        quicksort(A, lo, p[0] - 1)
        quicksort(A, p[1] + 1, hi)

def partition(A, lo, hi):
    pivot = A[(lo + hi) / 2]

    lt = lo
    eq = lo
    gt = hi

    while eq <= gt:
        if A[eq] < pivot:
            swap(A, eq, lt)
            lt = lt + 1
            eq = eq + 1
        else:
            if A[eq] > pivot:
                swap(A, eq, gt)
                gt = gt - 1
            else:
                eq = eq + 1
    
    return [lt, gt]

def swap(A, i, j):
    temp = A[i]
    A[i] = A[j]
    A[j] = temp

A = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]
quicksort(A, 0, len(A) - 1)

print("Sorted list: " + A)
