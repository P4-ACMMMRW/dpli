#include <TestingUtil.hpp>

using namespace dplgrammar;

AST_TEST("replace_with.dpl") {
    std::vector<size_t> expectedNodeRules = {
        DplParser::RuleProg,
        DplParser::RuleAssignstm,
        DplLexer::Identifier,
        DplParser::RuleTable,
        DplParser::RuleColumn,
        DplParser::RuleList,
        DplLexer::Integer,
        DplLexer::Integer,
        DplLexer::Integer,
        DplParser::RuleColumn,
        DplParser::RuleList,
        DplLexer::Integer,
        DplLexer::Integer,
        DplLexer::Integer,
        DplParser::RuleColumn,
        DplParser::RuleList,
        DplLexer::None,
        DplLexer::Integer,
        DplLexer::None,
        DplParser::RuleAssignstm,
        DplLexer::Identifier,
        DplParser::RuleFiltering,
        DplParser::RuleUnaryexpr,
        DplLexer::None,
        DplParser::RuleHeaderindex,
        DplLexer::String,
        DplLexer::Identifier,
        DplParser::RuleAssignstm,
        DplParser::RuleHeaderindex,
        DplLexer::String,
        DplLexer::Identifier,
        DplParser::RuleMultexpr,
        DplParser::RuleHeaderindex,
        DplLexer::String,
        DplLexer::Identifier,
        DplParser::RuleHeaderindex,
        DplLexer::String,
        DplLexer::Identifier,
        DplParser::RuleAssignstm,
        DplLexer::Identifier,
        DplParser::RuleHeaderindex,
        DplLexer::String,
        DplParser::RuleFiltering,
        DplParser::RuleUnaryexpr,
        DplLexer::None,
        DplParser::RuleHeaderindex,
        DplLexer::String,
        DplLexer::Identifier,
        DplParser::RuleProccall,
        DplLexer::Identifier,
        DplLexer::Identifier,
    };
    
    dplutil::TestingUtil::testAst("replace_with.dpl", expectedNodeRules);
}