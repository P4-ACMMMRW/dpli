#include <TestingUtil.hpp>

using namespace dplgrammar;

LEXER_TEST("replace_with.dpl") {
    std::vector<int> expectedTokens = {
        DplLexer::Identifier,
        DplLexer::Assign,
        DplLexer::OpenCurly,
        DplLexer::String,
        DplLexer::Colon,
        DplLexer::OpenSquare,
        DplLexer::Integer,
        DplLexer::Comma,
        DplLexer::Integer,
        DplLexer::Comma,
        DplLexer::Integer,
        DplLexer::CloseSquare,
        DplLexer::Comma,
        DplLexer::String,
        DplLexer::Colon,
        DplLexer::OpenSquare,
        DplLexer::Integer,
        DplLexer::Comma,
        DplLexer::Integer,
        DplLexer::Comma,
        DplLexer::Integer,
        DplLexer::CloseSquare,
        DplLexer::Comma,
        DplLexer::String,
        DplLexer::Colon,
        DplLexer::OpenSquare,
        DplLexer::None,
        DplLexer::Comma,
        DplLexer::Integer,
        DplLexer::Comma,
        DplLexer::None,
        DplLexer::CloseSquare,
        DplLexer::CloseCurly,
        DplLexer::Identifier,
        DplLexer::Assign,
        DplLexer::Identifier,
        DplLexer::OpenSquare,
        DplLexer::String,
        DplLexer::CloseSquare,
        DplLexer::OpenSquare,
        DplLexer::Equal,
        DplLexer::None,
        DplLexer::CloseSquare,
        DplLexer::Replace,
        DplLexer::Identifier,
        DplLexer::OpenSquare,
        DplLexer::String,
        DplLexer::CloseSquare,
        DplLexer::With,
        DplLexer::Identifier,
        DplLexer::OpenSquare,
        DplLexer::String,
        DplLexer::CloseSquare,
        DplLexer::Star,
        DplLexer::Identifier,
        DplLexer::OpenSquare,
        DplLexer::String,
        DplLexer::CloseSquare,
        DplLexer::Identifier,
        DplLexer::OpenPar,
        DplLexer::Identifier,
        DplLexer::ClosePar
    };

    util::TestingUtil::testTokens("replace_with.dpl", expectedTokens);
}